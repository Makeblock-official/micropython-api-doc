:mod:`motion` --- 小奔底盘移动
=============================================

.. module:: rocky
   :synopsis: 小奔底盘移动

``motion`` 模块的主要功能与函数(因为是系统函数，所以使用时不需要带模块名称)

功能相关函数
----------------------

.. function:: stop()

   小奔停止运动。

.. function:: forward(speed,t=None,straight=False)

   小奔向前运动，参数：

   - *speed* 运动速度的数值，参数范围 ``-100 ~ 100``，负数代表后退，正数代表前进。
   - *t* 运动时间的数值，单位为 ``秒``，参数范围 ``0 ~ 数值范围极限``，如果设置为 1，代表小车往前运动 1s就会停下来。
     如果不设置该参数，在没有停止运动或者新的运动指令之前，维持前进状态。
   - *straight* 是否使能陀螺仪对行进方向的校正，如果不设置该参数，则默认不启用。

.. function:: backward(speed,t=None,straight=False)

   小奔向后运动，参数：

   - *speed* 运动速度的数值，参数范围 ``-100 ~ 100``，负数代表前进，正数代表后退。
   - *t* 运动时间的数值，单位为 ``秒``，参数范围 ``0 ~ 数值范围极限``，如果设置为 1，代表小车往后运动 1s就会停下来。
     如果不设置该参数，在没有停止运动或者新的运动指令之前，维持后退状态。
   - *straight* 是否使能陀螺仪对行进方向的校正，如果不设置该参数，则默认不启用。

.. function:: turn_left(speed, t = None)

   小奔向左转，参数：

   - *speed* 转向快慢程度的数值，参数范围 ``-100 ~ 100``，负数代表右转，正数代表左转。
   - *t* 运动时间的数值，单位为 ``秒``，参数范围 ``0 ~ 数值范围极限``，如果设置为 1，代表小车左转 1s就会停下来。
     如果不设置该参数，在没有停止运动或者新的运动指令之前，维持左转状态。

.. function:: turn_right(speed, t = None)

   小奔向右转，参数：

   - *speed* 转向快慢程度的数值，参数范围 ``-100 ~ 100``，负数代表左转，正数代表右转。
   - *t* 运动时间的数值，单位为 ``秒``，参数范围 ``0 ~ 数值范围极限``，如果设置为 1，代表小车右转 1s就会停下来。
     如果不设置该参数，在没有停止运动或者新的运动指令之前，维持右转状态。

.. function:: drive(left_power, right_power)

   小奔电机按照设定的数值转动，参数：

   - *left_power* 左轮电机的运动速度，参数范围 ``-100 ~ 100``，负数代表左轮向后转动，正数代表左轮向前转动。
   - *right_power* 右轮电机的运动速度，参数范围 ``-100 ~ 100``，负数代表右轮向后转动，正数代表右轮向前转动。

.. function:: turn_right_by_degree(angle, speed = 40)

   小奔按照设定的角度值右转，参数：

   - *angle* 代表转动的角度，负数代表左转，正数代表右转。
   - *speed* 在何种速度下进行转弯，参数范围 ``0 ~ 100``； 如果不设置该参数，速度默认为40。
    （由于拐弯使用陀螺仪作为传感器，建议不要修改速度，避免转弯角度不准）

.. function:: turn_left_by_degree(angle, speed = 40)

   小奔按照设定的角度值左转，参数：

   - *angle* 代表转动的角度，负数代表右转，正数代表左转。
   - *speed* 在何种速度下进行转弯，参数范围 ``0 ~ 100``； 如果不设置该参数，速度默认为40。
    （由于拐弯使用陀螺仪作为传感器，建议不要修改速度，避免转弯角度不准）

程序示例：
------------

.. code-block:: python

  import codey
  import rocky
  import time
  
  
  rocky.forward(50, 1)
  rocky.stop()
  rocky.backward(50, 1)
  rocky.turn_left(50, 1)
  rocky.turn_right(50, 1)
  rocky.drive(50, 80)
  time.sleep(2)
  while True:
      rocky.turn_right_by_degree(80, 40)
      rocky.turn_right_by_degree(80, 20)